Checksum: V3c39889108256eea36567f99b2fe9d4cb
Organisation: CodeScan
Server: 127.0.0.1
Product: SF
Type: EVALUATION
LicenseServer: http://license.code-scan.com/index.php/api/addProject?lid=3342324
Expiration: 2028-05-06
Loopback: true
OrgId: Avinava-Page-Blocking-For-VF-Pages
OrgId: codemafiaa-forceux
OrgId: flexchecks-ListViews
OrgId: noeticpenguin-communityDebugger
OrgId: Avinava-VFUIBlock
OrgId: developerforce-Force.com-Toolkit-for-Facebook
OrgId: FaruhHub-SalesForce_Fighting_with_VisualForcePage
OrgId: JLiljegren-SFDC-Territory-Select
OrgId: martyychang-sf-todo-app-vf-ed
OrgId: kAmrita-SalesForce
OrgId: financialforcedev-apex-mdapi
OrgId: codescanGitDownload1
OrgId: dhoechst-Salesforce-Test-Factory
OrgId: abhinavguptas-Salesforce-Lookup-Rollup-Summaries
OrgId: DNC-Australia-Villagechief
OrgId: license-test-local
OrgId: license-test
OrgId: new-master-branch-test
OrgId: master-branch-test
OrgId: new
OrgId: codescan-salesforce
OrgId: new-branch-test
OrgId: sonarlint
OrgId: JitenJoysar-Building-next-generation-Visualforce-Page-Utilizing-Salesforce-Lightning-Design-System-part-I
OrgId: DmitryMarchenkov-Salesforce
OrgId: JacksonRiver-salesforce
OrgId: DouglasCAyers-sfdc-remedyforce-queue-assignments
OrgId: forcedotcom-cinnamon
OrgId: afawcett-apex-toolingapi
OrgId: kevinohara80-sfdc-trigger-framework
OrgId: ASurzhenko-Salesforce
OrgId: davidhabib-Auctions-for-Salesforce
OrgId: dnyaneshchandratre-Salesforce
OrgId: dhoechst-ApexBox
OrgId: aneeshbhat1-Salesforce
OrgId: CACommunity-Salesforce
OrgId: mattwelch-SalesforceAutomatic
OrgId: arupsarkar-salesforce
OrgId: junaid1800-Salesforce
OrgId: JmeG-zendesk-salesforce-sdk
OrgId: cyberstar2015-salesforce
OrgId: kuhinoor-salesforce
OrgId: myklegard-Salesforce
OrgId: box-box-salesforce-sdk
OrgId: dimagi-SalesforceFB
OrgId: codescanSalesforceDownload1
OrgId: csteddy-salesforce
OrgId: alex-chernik-salesforce
OrgId: AdelHammoudi-SalesForce
OrgId: andrzejchodor-salesforce-apex-templates
OrgId: Damnum-Salesforce
OrgId: Adnan-Khaan-salesforce
OrgId: bdamarla-salesforce
OrgId: Lanzruiz-salesforce
OrgId: AkshayVispute-Salesforce
OrgId: aschattopadhyay-Salesforce
OrgId: cmgriffi-salesforce
OrgId: DeviousBard-Salesforce
OrgId: iqbalkh-salesforce
OrgId: avictorio-salesforce
OrgId: GARPDev-salesforce
OrgId: kevinohara80-salesforcedx-circleci-demo
OrgId: Bdgolka-SALESFORCE
OrgId: maluszkiewicz-salesforce
OrgId: JuliusShred-SalesForce
OrgId: OGlovatska-salesforce
OrgId: jfz94-Salesforce
OrgId: appirio-tech-Salesforce-Auto-Report-Runner
OrgId: BPeddle-SFDC.Custom.Login
OrgId: divTest
OrgId: tscottdev-Lightning-Lookup
OrgId: forcedotcom-LightningFlowComponents
OrgId: Karanraj-Dynamic-Lightning-Table
OrgId: fracarma-Lightning-Object-Creator-Component
OrgId: trailheadapps-northern-trail-outfitters
OrgId: ForceDotComLabs-sldsx
OrgId: alexed1-LightningFlowComponents
OrgId: appiphony-Strike-Components
OrgId: JitendraZaa-LightningExamples
OrgId: ian-hamilton-salesforce
OrgId: sfdx-testresults
OrgId: jlamontSC-test
OrgId: krprasadreddy-Dreamforce-ExtJS-Demo
OrgId: ben-test2
OrgId: lucianostraga-lightning-components-essentials
OrgId: abhinavguptas-Dreamforce-2015-Session-Angular-ifying-your-Visualforce-pages
OrgId: Andrew2000-Change-Request-Visualforce-Pages
OrgId: Avinava-Enhanced-Visualforce-Pageblock-Table-Component
OrgId: Avinava-Visualstrap-Salesforce1-VSDashboard
OrgId: docusign-sfdc-recipe-embedded-signing
OrgId: InteractiveIntelligence-Salesforce-CustomInteractionLog
OrgId: lanecwe-Prod
OrgId: migser-Caixa-Demo
OrgId: adtennant-sfdc-component-interfaces
OrgId: andrunix-sf-spreadsheet
OrgId: Avinava-jQuery-Slider-For-Visualforce-Pages
OrgId: crehs-AsyncApexJobRedirect
OrgId: aire-con-gas-Chlacker
OrgId: davidbmitchell77-Visualforce-Code-Examples
OrgId: elizabethtian-Cursos-Salesforce-App
OrgId: jefftrull-ExtJSWidgetsOnForceDotCom
OrgId: alouie-sfdc-ChatterEditHistory
OrgId: Avinava-Element-Blocking-For-VF-Pages
OrgId: Avinava-Visualforce-PageBlock-Table-Enhancer
OrgId: docusign-sfdc-recipe-embedded-sending
OrgId: IgorArt-VisualforcePageWithCRUD
OrgId: nzgonjanin-Dreamforce2012
OrgId: ardavanmet-visualforce-custom-lookup-page
OrgId: benedwards44-lightningforce
OrgId: DouglasCAyers-sfdc-queue-members-excel
OrgId: mattparkerls-VisualforceSearchTemplate
OrgId: AurelienLaval-appeler-une-methode-de-controleur-depuis-Salesforce
OrgId: developerforce-SalesforceDurablePushTopicDemo
OrgId: ghacic-Locale-Formatted-Date-And-Datetime-Components
OrgId: MarketTraders-full_sandbox